temp=`Temperatur (2m)`,
precip=`Niederschlag (letzte Stunde)`,
sunshine=`Sonnenscheindauer (letzte Stunde)`) %>%
mutate(datetime=as.POSIXct(paste(date, time), format='%d.%m.%y %H:%M:%S'),
source='current')
while (last_date < Sys.Date()) {
print(paste0('  loading forecast from ',last_date))
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
F
})
if (fc != F) {
all = bind_rows(all, fc)
}
last_date <- last_date+1
}
View(all)
View(all)
forecasts <- all %>%
group_by(date) %>%
top_n(-1, err) %>%
arrange(date) %>%
select(-err)
# you need to install the R package "needs" the
# first time you run this.
# install.packages("needs")
# library(needs)
#
needs(readr, rvest, dplyr, tidyr)
args = commandArgs(trailingOnly=TRUE)
dir.create('zip', showWarnings = F)
dir.create('data', showWarnings = F)
dir.create('out', showWarnings = F)
dir.create('out/stations', showWarnings = F)
source('src/download.R')
source('src/parse.R')
source('src/forecast.R')
url.stationen <- 'https://opendata.dwd.de/climate_environment/CDC/observations_germany/climate/daily/kl/historical/KL_Tageswerte_Beschreibung_Stationen.txt'
stationen <- read_fwf(url.stationen,
skip = 3,
col_positions = fwf_widths(
c(5,9,9,15,12,10,42,22),
c('id','from','to','altitude','lat','lon','name','state')),
trim_ws = T,
locale = locale(encoding = 'latin1')) %>%
mutate(from=as.Date(as.character(from), '%Y%m%d'), to=as.Date(as.character(to), '%Y%m%d')) %>%
filter(to > Sys.Date()-3)
# get forecast
sapply(stationen$id, add_forecast)
wmo <- 'E426'
warnings()
warnings()
warnings()
last_date = Sys.Date()-2
print(paste0('  loading forecast from ',last_date))
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
F
})
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
mosmix_forecast <- function(station_id, after_date) {
url <- paste0('https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_L/single_stations/', station_id, '/kml/MOSMIX_L_',after_date,'21_',station_id,'.kmz')
kmz   <- tempfile("mosmix_demo_", fileext = ".kmz")
check <- download.file(url, kmz, quiet=T)
if ( inherits(check, "try-error") ) stop("Problems downloading the file!")
kml   <- unzip(kmz)
doc <- XML::xmlParse(kml)
datetime <- get_datetime(doc)
meta     <- get_meta_info(doc)
fcst1 <- get_forecasts(station_id, doc, datetime, meta, as.zoo = T)
plot(fcst1)
fcst2 <- mosmix::get_forecasts(station_id, doc, datetime, meta, as.zoo = F)
if (is.null(fcst2)) {
out <- fcst2 %>%
mutate(date=format(datetime, '%Y-%m-%d')) %>%
filter(date>as.Date(after_date, '%Y%m%d'))
# group_by(date) %>%
# summarise(
#   TNK=min(K2C(TTT)),
#   TMK=mean(K2C(TTT)),
#   TXK=max(K2C(TTT)),
#   RSK=sum(RR1c),
#   SDK=round(sum(SunD1/3600),2),
#   err=mean(E_TTT)) %>%
# mutate(forecast=TRUE)
# fcst2 %>% ggplot(aes(x=datetime)) +
#   geom_ribbon(aes(ymin=K2C(TTT-E_TTT), ymax=K2C(TTT+E_TTT)), fill='red', alpha=0.1) +
#   geom_line(aes(y=K2C(TTT)), color='red') +
#   geom_ribbon(aes(ymin=K2C(Td-E_Td), ymax=K2C(Td+E_Td)), fill='green', alpha=0.1) +
#   geom_line(aes(y=K2C(Td)), color='green')
#
# fcst2 %>% ggplot(aes(x=datetime)) +
#   geom_col(aes(y=RR1c), color='blue')
return(out)
}
return(F)
}
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
F
})
source('~/projects/dwd-scraper/src/forecast.R')
mosmix_forecast <- function(station_id, after_date) {
url <- paste0('https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_L/single_stations/', station_id, '/kml/MOSMIX_L_',after_date,'21_',station_id,'.kmz')
kmz   <- tempfile("mosmix_demo_", fileext = ".kmz")
check <- download.file(url, kmz, quiet=T)
if ( inherits(check, "try-error") ) stop("Problems downloading the file!")
kml   <- unzip(kmz)
doc <- XML::xmlParse(kml)
datetime <- get_datetime(doc)
meta     <- get_meta_info(doc)
fcst1 <- get_forecasts(station_id, doc, datetime, meta, as.zoo = T)
plot(fcst1)
fcst2 <- mosmix::get_forecasts(station_id, doc, datetime, meta, as.zoo = F)
if (!is.null(fcst2)) {
out <- fcst2 %>%
mutate(date=format(datetime, '%Y-%m-%d')) %>%
filter(date>as.Date(after_date, '%Y%m%d'))
# group_by(date) %>%
# summarise(
#   TNK=min(K2C(TTT)),
#   TMK=mean(K2C(TTT)),
#   TXK=max(K2C(TTT)),
#   RSK=sum(RR1c),
#   SDK=round(sum(SunD1/3600),2),
#   err=mean(E_TTT)) %>%
# mutate(forecast=TRUE)
# fcst2 %>% ggplot(aes(x=datetime)) +
#   geom_ribbon(aes(ymin=K2C(TTT-E_TTT), ymax=K2C(TTT+E_TTT)), fill='red', alpha=0.1) +
#   geom_line(aes(y=K2C(TTT)), color='red') +
#   geom_ribbon(aes(ymin=K2C(Td-E_Td), ymax=K2C(Td+E_Td)), fill='green', alpha=0.1) +
#   geom_line(aes(y=K2C(Td)), color='green')
#
# fcst2 %>% ggplot(aes(x=datetime)) +
#   geom_col(aes(y=RR1c), color='blue')
return(out)
}
return(F)
}
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
F
})
# get forecast
sapply(stationen$id, add_forecast)
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
mosmix_forecast <- function(station_id, after_date) {
url <- paste0('https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_L/single_stations/', station_id, '/kml/MOSMIX_L_',after_date,'21_',station_id,'.kmz')
kmz   <- tempfile("mosmix_demo_", fileext = ".kmz")
check <- download.file(url, kmz, quiet=T)
if ( inherits(check, "try-error") ) stop("Problems downloading the file!")
kml   <- unzip(kmz)
doc <- XML::xmlParse(kml)
datetime <- get_datetime(doc)
meta     <- get_meta_info(doc)
fcst1 <- get_forecasts(station_id, doc, datetime, meta, as.zoo = T)
plot(fcst1)
fcst2 <- mosmix::get_forecasts(station_id, doc, datetime, meta, as.zoo = F)
if (!is.null(fcst2)) {
out <- fcst2 %>%
mutate(date=format(datetime, '%Y-%m-%d')) %>%
filter(date>as.Date(after_date, '%Y%m%d')) %>%
mutate(temp=K2C(TTT),
precip=RR1c,
sunhine=SunD1/3600,
error=K2C(E_TTT))
# group_by(date) %>%
# summarise(
#   TNK=min(K2C(TTT)),
#   TMK=mean(K2C(TTT)),
#   TXK=max(K2C(TTT)),
#   RSK=sum(RR1c),
#   SDK=round(sum(SunD1/3600),2),
#   err=mean(E_TTT)) %>%
# mutate(forecast=TRUE)
# fcst2 %>% ggplot(aes(x=datetime)) +
#   geom_ribbon(aes(ymin=K2C(TTT-E_TTT), ymax=K2C(TTT+E_TTT)), fill='red', alpha=0.1) +
#   geom_line(aes(y=K2C(TTT)), color='red') +
#   geom_ribbon(aes(ymin=K2C(Td-E_Td), ymax=K2C(Td+E_Td)), fill='green', alpha=0.1) +
#   geom_line(aes(y=K2C(Td)), color='green')
#
# fcst2 %>% ggplot(aes(x=datetime)) +
#   geom_col(aes(y=RR1c), color='blue')
return(out)
}
return(F)
}
View(station_id_map)
wmo = '10381'
dwd_station_id = '00403'
# stationen$forecast[stationen$id == dwd_station_id] <<- F
datafile <- paste0('out/stations/', dwd_station_id, '.csv')
file.exists(datafile)
data <- read_csv(datafile) %>% mutate(forecast=F)
last_date <- as.Date(max(data$date))
s <- station_id_map %>% filter(dwdid == as.numeric(dwd_station_id))
wmo <- s$id[1]
print(paste0('  found wmo station ', wmo))
current <- read_csv2(paste0('https://opendata.dwd.de/weather/weather_reports/poi/',
str_replace(sprintf('%-5s', wmo), ' ', '_'), '-BEOB.csv'),
skip = 2,
locale = locale(decimal_mark =',',
grouping_mark = '.')) %>%
filter(row_number() > 2) %>%
select(date=Datum,
time=`Uhrzeit (UTC)`,
temp=`Temperatur (2m)`,
precip=`Niederschlag (letzte Stunde)`,
sunshine=`Sonnenscheindauer (letzte Stunde)`) %>%
mutate(datetime=as.POSIXct(paste(date, time), format='%d.%m.%y %H:%M:%S'),
error=0)
View(current)
while (last_date < Sys.Date()) {
print(paste0('  loading forecast from ',last_date))
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
F
})
if (fc != F) {
all = bind_rows(all, fc)
}
last_date <- last_date+1
}
View(fc)
source('~/projects/dwd-scraper/src/forecast.R')
mosmix_forecast <- function(station_id, after_date) {
url <- paste0('https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_L/single_stations/', station_id, '/kml/MOSMIX_L_',after_date,'21_',station_id,'.kmz')
kmz   <- tempfile("mosmix_demo_", fileext = ".kmz")
check <- download.file(url, kmz, quiet=T)
if ( inherits(check, "try-error") ) stop("Problems downloading the file!")
kml   <- unzip(kmz)
doc <- XML::xmlParse(kml)
datetime <- get_datetime(doc)
meta     <- get_meta_info(doc)
fcst1 <- get_forecasts(station_id, doc, datetime, meta, as.zoo = T)
plot(fcst1)
fcst2 <- mosmix::get_forecasts(station_id, doc, datetime, meta, as.zoo = F)
if (!is.null(fcst2)) {
out <- fcst2 %>%
mutate(date=format(datetime, '%Y-%m-%d')) %>%
filter(date>as.Date(after_date, '%Y%m%d')) %>%
transmute(datetime,
temp=K2C(TTT),
precip=RR1c,
sunshine=SunD1/3600,
error=K2C(E_TTT))
# group_by(date) %>%
# summarise(
#   TNK=min(K2C(TTT)),
#   TMK=mean(K2C(TTT)),
#   TXK=max(K2C(TTT)),
#   RSK=sum(RR1c),
#   SDK=round(sum(SunD1/3600),2),
#   err=mean(E_TTT)) %>%
# mutate(forecast=TRUE)
# fcst2 %>% ggplot(aes(x=datetime)) +
#   geom_ribbon(aes(ymin=K2C(TTT-E_TTT), ymax=K2C(TTT+E_TTT)), fill='red', alpha=0.1) +
#   geom_line(aes(y=K2C(TTT)), color='red') +
#   geom_ribbon(aes(ymin=K2C(Td-E_Td), ymax=K2C(Td+E_Td)), fill='green', alpha=0.1) +
#   geom_line(aes(y=K2C(Td)), color='green')
#
# fcst2 %>% ggplot(aes(x=datetime)) +
#   geom_col(aes(y=RR1c), color='blue')
return(out)
}
return(F)
}
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
last_date <- as.Date(max(data$date))
while (last_date < Sys.Date()) {
print(paste0('  loading forecast from ',last_date))
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
NULL
})
if (!is.null(fc)) {
all = bind_rows(all, fc)
}
last_date <- last_date+1
}
View(fc)
View(current)
View(fc)
source('~/projects/dwd-scraper/src/forecast.R')
last_date <- as.Date(max(data$date))
source('~/projects/dwd-scraper/src/forecast.R')
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
NULL
})
View(fc)
# get current weather
current <- read_csv2(paste0('https://opendata.dwd.de/weather/weather_reports/poi/',
str_replace(sprintf('%-5s', wmo), ' ', '_'), '-BEOB.csv'),
skip = 2,
locale = locale(decimal_mark =',',
grouping_mark = '.')) %>%
filter(row_number() > 2) %>%
select(date=Datum,
time=`Uhrzeit (UTC)`,
temp=`Temperatur (2m)`,
precip=`Niederschlag (letzte Stunde)`,
sunshine=`Sonnenscheindauer (letzte Stunde)`) %>%
mutate(datetime=as.POSIXct(paste(date, time), format='%d.%m.%y %H:%M:%S'),
error=0) %>%
select(-date, -time)
View(current)
is.null(fc)
# complement with
all <- current
source('~/projects/dwd-scraper/src/forecast.R')
while (last_date < Sys.Date()) {
print(paste0('  loading forecast from ',last_date))
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
NULL
})
if (!is.null(fc)) {
all = bind_rows(all, fc)
}
last_date <- last_date+1
}
View(current)
View(current)
# get current weather
current <- read_csv2(paste0('https://opendata.dwd.de/weather/weather_reports/poi/',
str_replace(sprintf('%-5s', wmo), ' ', '_'), '-BEOB.csv'),
skip = 2,
na = c('', '---'),
locale = locale(decimal_mark =',',
grouping_mark = '.')) %>%
filter(row_number() > 2) %>%
select(date=Datum,
time=`Uhrzeit (UTC)`,
temp=`Temperatur (2m)`,
precip=`Niederschlag (letzte Stunde)`,
sunshine=`Sonnenscheindauer (letzte Stunde)`) %>%
mutate(datetime=as.POSIXct(paste(date, time), format='%d.%m.%y %H:%M:%S'),
error=0) %>%
select(-date, -time)
wmo
read_csv2('https://opendata.dwd.de/weather/weather_reports/poi/10381-BEOB.csv') %>% View()
read_csv2('https://opendata.dwd.de/weather/weather_reports/poi/10379-BEOB.csv') %>% View()
# get current weather
current <- read_csv2(paste0('https://opendata.dwd.de/weather/weather_reports/poi/',
str_replace(sprintf('%-5s', wmo), ' ', '_'), '-BEOB.csv'),
skip = 2,
na = c('', '---'),
locale = locale(decimal_mark =',',
grouping_mark = '.')) %>%
filter(row_number() > 2) %>%
select(date=Datum,
time=`Uhrzeit (UTC)`,
temp=`Temperatur (2m)`,
precip=`Niederschlag (letzte Stunde)`,
sunshine=`Sonnenscheindauer (letzte Stunde)`) %>%
mutate(datetime=as.POSIXct(paste(date, time), format='%d.%m.%y %H:%M:%S'),
error=0) %>%
select(-date, -time) %>%
filter(!is.na(temp) & !is.na(precip))
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
# complement with
all <- tibble()
while (last_date < Sys.Date()) {
print(paste0('  loading forecast from ',last_date))
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
NULL
})
if (!is.null(fc)) {
all = bind_rows(all, fc)
}
last_date <- last_date+1
}
View(all)
all %>% group_by(format(datetime, '%Y-%m-%d'))
all %>% group_by(format(datetime, '%Y-%m-%d')) %>% mutate(x=n())
all %>% group_by(format(datetime, '%Y-%m-%d')) %>% filter(n() != 24)
all %>% group_by(format(datetime, '%Y-%m-%d')) %>% filter(n() == 24)
all %>% group_by(format(datetime, '%Y-%m-%d')) %>% filter(n() == 24) %>% group_by(datetime)
all %>% group_by(format(datetime, '%Y-%m-%d')) %>% filter(n() == 24) %>% group_by(datetime) %>% top_n(-1, error)
source('~/projects/dwd-scraper/src/forecast.R')
# get forecast
sapply(stationen$id, add_forecast)
source('~/projects/dwd-scraper/src/forecast.R')
# get forecast
sapply(stationen$id, add_forecast)
source('~/projects/dwd-scraper/src/forecast.R')
# get forecast
sapply(stationen$id, add_forecast)
# get forecast
sapply(stationen$id, add_forecast)
source('~/projects/dwd-scraper/src/forecast.R')
# get forecast
sapply(stationen$id, add_forecast)
wmo <- 'P681'
# get current weather
current <- read_csv2(paste0('https://opendata.dwd.de/weather/weather_reports/poi/',
str_replace(sprintf('%-5s', wmo), ' ', '_'), '-BEOB.csv'),
skip = 2,
na = c('', '---'),
locale = locale(decimal_mark =',',
grouping_mark = '.')) %>%
filter(row_number() > 2) %>%
select(date=Datum,
time=`Uhrzeit (UTC)`,
temp=`Temperatur (2m)`,
precip=`Niederschlag (letzte Stunde)`,
sunshine=`Sonnenscheindauer (letzte Stunde)`) %>%
mutate(datetime=as.POSIXct(paste(date, time), format='%d.%m.%y %H:%M:%S'),
error=0) %>%
select(-date, -time) %>%
filter(!is.na(temp) & !is.na(precip))
View(current)
# complement with
all <- tibble()
if (nrow(current) > 0) {
all <- current
}
dwd_station_id <- '00073'
# stationen$forecast[stationen$id == dwd_station_id] <<- F
datafile <- paste0('out/stations/', dwd_station_id, '.csv')
data <- read_csv(datafile) %>% mutate(forecast=F)
last_date <- as.Date(max(data$date))
View(data)
while (last_date < Sys.Date()) {
print(paste0('  loading forecast from ',last_date))
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
NULL
})
if (!is.null(fc)) {
all = bind_rows(all, fc)
}
last_date <- last_date+1
}
View(all)
last_date <- as.Date(max(data$date))
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
source('~/projects/dwd-scraper/src/forecast.R')
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
fc <- tryCatch({
mosmix_forecast(wmo, format(last_date, '%Y%m%d'))
}, error=function(cond){
NULL
})
if (!is.null(fc)) {
all = bind_rows(all, fc)
}
la
if (!is.null(fc)) {
all = bind_rows(all, fc)
}
View(all)
forecasts <- all %>%
group_by(datetime) %>%
top_n(-1, error) %>%
mutate(date=as.Date(datetime)) %>%
group_by(date) %>%
filter(n() == 24) %>%
summarise(
TNK=min(temp),
TMK=mean(temp),
TXK=max(temp),
RSK=sum(precip),
SDK=round(sum(sunshine),2)
) %>%
mutate(source='forecast')
forecasts <- all %>%
group_by(datetime) %>%
top_n(-1, error) %>%
mutate(date=as.Date(datetime)) %>%
group_by(date) %>%
filter(n() == 24)
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
# get forecast
sapply(stationen$id, add_forecast)
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
source('~/projects/dwd-scraper/src/forecast.R')
# get forecast
sapply(stationen$id, add_forecast)
source('~/projects/dwd-scraper/src/forecast.R')
# get forecast
sapply(stationen$id, add_forecast)
last_date = as.Date('2006-11-11')
last_date - Sys.Date()
Sys.Date() - last_date
Sys.Date() - last_date > 4
source('~/projects/dwd-scraper/src/forecast.R')
# get forecast
sapply(stationen$id, add_forecast)
